@page "/budget"
@inject LocalStorageService Storage

<div class="budget-page">
  <div class="budget-container">
    <h3>Budget & Preferences</h3>

    <div class="field-group">
      <label for="budgetInput">Weekly Budget ($):</label>
      <input type="number" id="budgetInput" @bind="weeklyBudget" />
    </div>

    <div class="field-group">
      <label for="dietSelect">Dietary Preference:</label>
      <select id="dietSelect" @bind="dietType">
        <option value="">None</option>
        <option>Vegetarian</option>
        <option>Vegan</option>
        <option>Lacto-Vegetarian</option>
        <option>Ovo-Vegetarian</option>
        <option>Pescatarian</option>
        <option>Flexitarian</option>
        <option>Non-Vegetarian</option>
        <option>Keto</option>
        <option>Paleo</option>
        <option>Mediterranean</option>
        <option>DASH</option>
        <option>Gluten-Free</option>
        <option>Halal</option>
        <option>Kosher</option>
      </select>
    </div>

    <div class="btn-group">
      <button class="btn-save" @onclick="SavePreferences">Save Preferences</button>
      <button class="btn-clear" @onclick="ClearPreferences">Clear Preferences</button>
    </div>

    @if (showSavedMessage)
    {
      <div class="alert-saved">
        Preferences saved successfully!
      </div>
    }
  </div>
</div>

@code {
    private decimal weeklyBudget = 0;
    private string dietType = "";
    private bool showSavedMessage = false;

    private async Task SavePreferences()
    {
        var data = new BudgetData { Budget = weeklyBudget, Diet = dietType };
        await Storage.SaveAsync("budgetPrefs", data);
        showSavedMessage = true;
    }

    protected override async Task OnInitializedAsync()
    {
        var saved = await Storage.LoadAsync<BudgetData>("budgetPrefs");
        if (saved is not null)
        {
            weeklyBudget = saved.Budget;
            dietType = saved.Diet;
        }
    }

    private async Task ClearPreferences()
    {
        weeklyBudget = 0;
        dietType = "";
        await Storage.RemoveAsync("budgetPrefs");
        showSavedMessage = false;
    }

    private class BudgetData { public decimal Budget { get; set; } public string Diet { get; set; } = ""; }
}
