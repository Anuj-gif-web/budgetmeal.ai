@page "/budget"
@inject LocalStorageService Storage

<h3>Budget & Preferences</h3>

<div class="mb-3" style="max-width: 400px;">
    <label for="budgetInput" class="form-label">Weekly Budget ($):</label>
    <input type="number" id="budgetInput" class="form-control" @bind="weeklyBudget" />
</div>

<div class="mb-3" style="max-width: 400px;">
    <label for="dietSelect" class="form-label">Dietary Preference:</label>
    <select id="dietSelect" class="form-select" @bind="dietType">
        <option value="">None</option>
        <option>Vegetarian</option>
        <option>Vegan</option>
        <option>Lacto-Vegetarian</option>
        <option>Ovo-Vegetarian</option>
        <option>Pescatarian</option>
        <option>Flexitarian</option>
        <option>Non-Vegetarian</option>
        <option>Keto</option>
        <option>Paleo</option>
        <option>Mediterranean</option>
        <option>DASH</option>
        <option>Gluten-Free</option>
        <option>Halal</option>
        <option>Kosher</option>
    </select>
</div>

<button class="btn btn-primary" @onclick="SavePreferences">Save Preferences</button>

<button class="btn btn-outline-danger ms-2" @onclick="ClearPreferences">Clear Preferences</button>

@if (showSavedMessage)
{
    <div class="alert alert-success mt-3" style="max-width: 400px;">
        Preferences saved successfully!
    </div>
}

@code {
    private decimal weeklyBudget = 0;
    private string dietType = "";
    private bool showSavedMessage = false;

    private async Task SavePreferences()
    {
        var data = new BudgetData
        {
            Budget = weeklyBudget,
            Diet = dietType
        };
        await Storage.SaveAsync("budgetPrefs", data);
        showSavedMessage = true;
    }

    protected override async Task OnInitializedAsync()
    {
        var saved = await Storage.LoadAsync<BudgetData>("budgetPrefs");
        if (saved is not null)
        {
            weeklyBudget = saved.Budget;
            dietType = saved.Diet;
        }
    }

    private class BudgetData
    {
        public decimal Budget { get; set; }
        public string Diet { get; set; } = "";
    }

    private async Task ClearPreferences()
    {
        weeklyBudget = 0;
        dietType = "";
        await Storage.RemoveAsync("budgetPrefs");
        showSavedMessage = false;
    }
}
