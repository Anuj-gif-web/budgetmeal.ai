@page "/pantry"
@inject LocalStorageService Storage

<div class="pantry-page">
  <div class="pantry-container">
    <h3>Your Pantry</h3>
    <p>Add the ingredients you already have:</p>

    <div class="pantry-input">
      <input @bind="newIngredient" placeholder="e.g. rice, eggs, tomato" />
      <button class="btn-add" @onclick="AddIngredient">Add</button>
    </div>

    @if (pantryItems.Any())
    {
      <ul class="pantry-list">
        @foreach (var item in pantryItems)
        {
          <li>
            <span>@item</span>
            <button class="btn-remove" @onclick="() => RemoveIngredient(item)">
              Remove
            </button>
          </li>
        }
      </ul>

      <button class="btn-clear" @onclick="ClearPantry">Clear Pantry</button>
    }
    else
    {
      <p class="pantry-empty"><em>Your pantry is currently empty.</em></p>
    }
  </div>
</div>

@code {
    private string newIngredient = string.Empty;
    private List<string> pantryItems = new();

    protected override async Task OnInitializedAsync()
    {
        var saved = await Storage.LoadAsync<List<string>>("pantryItems");
        if (saved is not null)
            pantryItems = saved;
    }

    private async Task AddIngredient()
    {
        if (!string.IsNullOrWhiteSpace(newIngredient))
        {
            pantryItems.Add(newIngredient.Trim());
            newIngredient = string.Empty;
            await Storage.SaveAsync("pantryItems", pantryItems);
        }
    }

    private async Task RemoveIngredient(string item)
    {
        pantryItems.Remove(item);
        await Storage.SaveAsync("pantryItems", pantryItems);
    }

    private async Task ClearPantry()
    {
        pantryItems.Clear();
        await Storage.RemoveAsync("pantryItems");
    }
}
